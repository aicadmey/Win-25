# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

# Step 1: Define home fitness personas and exercises with sets/reps
fitness_personas = {
    "Weight Loss": [
        "Jumping Jacks - 3 sets of 20 reps",
        "High Knees - 3 sets of 30 seconds",
        "Burpees - 3 sets of 12 reps",
        "Mountain Climbers - 3 sets of 20 reps (each leg)",
        "Plank - 3 sets of 30 seconds",
        "Side Plank - 2 sets of 20 seconds per side",
        "Step-Ups (using stairs) - 3 sets of 15 reps (each leg)",
        "Bodyweight Squats - 3 sets of 15 reps",
        "Lunges - 3 sets of 10 reps (each leg)"
    ],
    "Muscle Gain": [
        "Push-Ups - 3 sets of 12 reps",
        "Dips (using chairs) - 3 sets of 12 reps",
        "Bodyweight Squats - 4 sets of 15 reps",
        "Glute Bridges - 4 sets of 15 reps",
        "Superman Exercise - 3 sets of 10 reps",
        "Plank Rows - 3 sets of 12 reps",
        "Wall Sits - 3 sets of 30 seconds",
        "Side Lunges - 3 sets of 10 reps (each leg)",
        "Leg Raises - 3 sets of 15 reps"
    ],
    "Flexibility Improvement": [
        "Child's Pose - 3 sets of 30 seconds",
        "Cat-Cow Pose - 3 sets of 10 reps",
        "Seated Forward Bend - 3 sets of 30 seconds",
        "Butterfly Stretch - 3 sets of 20 seconds",
        "Cobra Stretch - 3 sets of 30 seconds",
        "Side Stretches - 3 sets of 20 seconds per side",
        "Bridge Pose - 3 sets of 30 seconds",
        "Thread the Needle - 3 sets of 30 seconds per side",
        "Standing Forward Bend - 3 sets of 30 seconds"
    ],
    "Cardio Focused": [
        "Jumping Jacks - 3 sets of 30 seconds",
        "High Knees - 3 sets of 45 seconds",
        "Burpees - 3 sets of 15 reps",
        "Mountain Climbers - 3 sets of 30 seconds (each leg)",
        "Running in Place - 3 sets of 1 minute",
        "Jumping Rope - 3 sets of 30 seconds",
        "Stair Climbing - 3 sets of 2 minutes",
        "Sprint Intervals (if space allows) - 3 sets of 30 seconds sprint, 30 seconds rest"
    ]
}

# Step 2: Collect User Input
def get_user_answers():
    answers = {}
    answers["What is your primary fitness goal?"] = input("What is your primary fitness goal? (Weight Loss, Muscle Gain, Flexibility, Improve Cardio, Increase Stamina, etc.): ")
    answers["What is your body type?"] = input("What is your body type? (Ectomorph, Mesomorph, Endomorph): ")
    answers["How often do you exercise?"] = input("How often do you exercise? (Rarely, Sometimes, Often): ")
    answers["Do you prefer structured workout plans or freeform exercises?"] = input("Do you prefer structured workout plans or freeform exercises? (Structured, Freeform): ")
    answers["Do you have any injuries or conditions affecting movement?"] = input("Do you have any injuries or conditions affecting movement? (Yes, No): ")
    return answers


# Step 3: Analyze responses to determine fitness persona
def analyze_responses(answers):
    goal = answers["What is your primary fitness goal?"].lower()

    if goal == "weight loss":
        return "Weight Loss"
    elif goal == "muscle gain":
        return "Muscle Gain"
    elif goal == "flexibility":
        return "Flexibility Improvement"
    elif goal in ["improve cardio", "increase stamina"]:
        return "Cardio Focused"
    else:
        return "General Fitness"


# Step 4: Suggest exercises based on persona
def suggest_exercises(persona):
    exercises = fitness_personas.get(persona, [])
    return exercises

# Main function
def main():
    # Get user answers
    answers = get_user_answers()
    # Analyze responses and get persona
    persona = analyze_responses(answers)
    # Get exercise suggestions
    exercises = suggest_exercises(persona)
    # Display the results
    print(f"Based on your responses, your fitness persona is: {persona}")
    print("Here are some home exercises tailored for you:")
    for exercise in exercises:
        print(f"- {exercise}")

# Run the program
if __name__ == "__main__":
    main()